import "tfplan/v2" as tfplan

# Get all db_instances instances from all modules
db_instances = filter tfplan.resource_changes as _, rc {
	rc.mode is "managed" and
		rc.type is "aws_db_instance" and
		(rc.change.actions contains "create" or
			rc.change.actions is ["update"])
}

# Rule to restrict instance_class types
storage_encryption_enabled = rule {
	all db_instances as _, instance {
		instance.change.after.storage_encrypted
	}
}

// --------------------------------------------------------
//                     _       _       _
//                    (_)     | |     | |
//                     _ _ __ | |_ ___| |
//                    | | '_ \| __/ _ \ |
//                    | | | | | ||  __/ |
//                    |_|_| |_|\__\___|_|
//
// --------------------------------------------------------
// Name:        intel-aws-db-instance-deny-unencrypted-database.sentinel
// Category:    Infrastructure (IaaS)
// Provider:    hashicorp/aws
// Resource:    aws_db_instance
// Parameter:   storage_encrypted
//
// Check:       storage_encrypted is not equal to: true
// --------------------------------------------------------
//  The RDS instance should utilize database encryption.
// --------------------------------------------------------
main = rule {
	(storage_encryption_enabled) else true
}
